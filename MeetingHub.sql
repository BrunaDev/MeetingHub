-- MySQL Script generated by MySQL Workbench
-- Fri Nov  1 09:06:00 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema MeetingHub
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema MeetingHub
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `MeetingHub` DEFAULT CHARACTER SET utf8 ;
USE `MeetingHub` ;

-- -----------------------------------------------------
-- Table `MeetingHub`.`Sala`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MeetingHub`.`Sala` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `capacidade` VARCHAR(45) NULL,
  `recursos_disponiveis` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MeetingHub`.`Reserva`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MeetingHub`.`Reserva` (
  `id` INT NOT NULL,
  `data_hora_inicio` VARCHAR(45) NULL,
  `data_hora_fim` VARCHAR(45) NULL,
  `Sala_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Sala_id`),
  INDEX `fk_Reserva_Sala1_idx` (`Sala_id` ASC) VISIBLE,
  CONSTRAINT `fk_Reserva_Sala1`
    FOREIGN KEY (`Sala_id`)
    REFERENCES `MeetingHub`.`Sala` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MeetingHub`.`Funcionario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MeetingHub`.`Funcionario` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `cargo` VARCHAR(45) NULL,
  `Reserva_id` INT NOT NULL,
  PRIMARY KEY (`id`, `Reserva_id`),
  INDEX `fk_Funcionario_Reserva_idx` (`Reserva_id` ASC) VISIBLE,
  CONSTRAINT `fk_Funcionario_Reserva`
    FOREIGN KEY (`Reserva_id`)
    REFERENCES `MeetingHub`.`Reserva` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MeetingHub`.`Recurso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MeetingHub`.`Recurso` (
  `id` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `quantidade` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `MeetingHub`.`Sala_has_Recurso`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `MeetingHub`.`Sala_has_Recurso` (
  `Sala_id` INT NOT NULL,
  `Recurso_id` INT NOT NULL,
  PRIMARY KEY (`Sala_id`, `Recurso_id`),
  INDEX `fk_Sala_has_Recurso_Recurso1_idx` (`Recurso_id` ASC) VISIBLE,
  INDEX `fk_Sala_has_Recurso_Sala1_idx` (`Sala_id` ASC) VISIBLE,
  CONSTRAINT `fk_Sala_has_Recurso_Sala1`
    FOREIGN KEY (`Sala_id`)
    REFERENCES `MeetingHub`.`Sala` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Sala_has_Recurso_Recurso1`
    FOREIGN KEY (`Recurso_id`)
    REFERENCES `MeetingHub`.`Recurso` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- Permitir que a coluna Reserva_id aceite valores nulos
ALTER TABLE `MeetingHub`.`Funcionario` 
MODIFY COLUMN `Reserva_id` INT NULL;

-- Configurar os campos id para serem auto-incremento
ALTER TABLE `MeetingHub`.`Sala` 
MODIFY COLUMN `id` INT NOT NULL AUTO_INCREMENT;

ALTER TABLE `MeetingHub`.`Reserva` 
MODIFY COLUMN `id` INT NOT NULL AUTO_INCREMENT;

ALTER TABLE `MeetingHub`.`Funcionario` 
MODIFY COLUMN `id` INT NOT NULL AUTO_INCREMENT;

ALTER TABLE `MeetingHub`.`Recurso` 
MODIFY COLUMN `id` INT NOT NULL AUTO_INCREMENT;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

SHOW TABLES;
SELECT * FROM funcionario;

-- Inserir salas
INSERT INTO `MeetingHub`.`Sala` (id, nome, capacidade, recursos_disponiveis) 
VALUES 
    ('1', 'Sala de reunião', '20', 'TV, Quadro Branco, Microfone'),
    ('2', 'Sala de recreação', '50', 'TV, Quadro Branco, Microfone, Folhas'),
    ('3', 'Sala de apresentação', '100', 'TV, Quadro Branco, Microfone, Projetor');

-- Inserir recursos
INSERT INTO `MeetingHub`.`Recurso` (id, nome, quantidade) 
VALUES 
    ('1', 'TV', '5'),
    ('2', 'Quadro Branco', '10'),
    ('3', 'Microfone', '15'),
    ('4', 'Folhas', '200'),
    ('5', 'Projetor', '5');
